let g:coc_global_extensions = g:coc_global_extensions + ['coc-solargraph']

function! s:AlternateSafe()
  try
    A
  catch /^Vim\%((\a\+)\)\=:E345:/
    let path = matchstr(v:exception, '.*"\zs.*\ze".*')
    execute 'e ' . path
  endtry
endfunction

command! AlternateSafe :call <SID>AlternateSafe()

augroup filetype_ruby
    autocmd!
    autocmd FileType ruby iab <buffer> de do<cr>end<esc>O
    autocmd FileType ruby iab <buffer> desc describe '' do<cr>end<esc>kf'
    autocmd FileType ruby iab <buffer> ite it '' do<cr>end<esc>kf'
    autocmd FileType ruby iab <buffer> ctx context '' do<cr>end<esc>kf'
    autocmd FileType ruby iab <buffer> defe def <cr>end<esc>k$
    autocmd FileType ruby iab <buffer> classe class <cr>end<esc>k$
    autocmd FileType ruby iab <buffer> ife if <cr>end<esc>k
    autocmd FileType ruby iab <buffer> pry require 'pry'; binding.pry
augroup END

let g:BufferNavigatorWidth = 50
let g:BufferNavigatorHighlightRules = [
      \["rubySpecDir", "dir", "spec", "NONE", "106", "NONE", "green"],
      \["rubySpecFile", "file", ".*_spec\.rb", "NONE", "154", "NONE", "green"],
      \]

source $HOME/.dotfiles/vim/ruby/mappings.vim
