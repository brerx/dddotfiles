" Enable TOC window auto-fit
let g:vim_markdown_toc_autofit = 1
let g:vim_markdown_folding_disabled = 1

" Customize highlight of markdown headlines depending on current theme
execute 'highlight htmlH1 ctermfg='.accentText
execute 'highlight htmlH2 ctermfg='.primaryText
execute 'highlight htmlH3 ctermfg='.secondaryText
execute 'highlight htmlH4 ctermfg='.secondaryText
execute 'highlight htmlH5 ctermfg='.secondaryText
execute 'highlight htmlH6 ctermfg='.secondaryText

let g:vimtex_syntax_conceal_disable = 1

set dictionary+=/usr/share/dict/words

function! s:SpellCheck(bang, lang = "en")
  let prefix = ""
  if a:bang
    let prefix = "no" 
  endif
  execute "setlocal " . prefix . "spell spelllang=" . a:lang
endfunction

command! -nargs=? -bang SpellCheck :call <SID>SpellCheck(<bang>0, <f-args>)

function! s:ToggleWrite(bang, width)
  if a:bang
    Goyo! | Limelight!
    set nowrap nolinebreak
    colorscheme codedark
    hi Normal ctermbg=NONE
    hi EndOfBuffer ctermbg=NONE
    hi LineNr ctermbg=NONE
    hi SignColumn ctermbg=NONE
    nunmap <silent> <buffer> j
    nunmap <silent> <buffer> k
  else
    set wrap linebreak
    colorscheme seoul256
    execute "Goyo " . a:width . " | Limelight"
    nnoremap <silent> <buffer> j gj
    nnoremap <silent> <buffer> k gk
  endif
endfunction

command! -nargs=* -bang Write :call <SID>ToggleWrite(<bang>0, <q-args>)


"coc-emoji is triggered when typing ':'
let g:coc_global_extensions = g:coc_global_extensions + [
      \'coc-emoji',
      \'coc-dictionary',
      \'coc-word',
      \]
