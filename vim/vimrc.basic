set nocompatible
set tabstop=2 softtabstop=2 expandtab shiftwidth=2 smarttab

" Enable syntax highlighting.
syntax on

" File-type highlighting and configuration.
" Run :filetype (without args) to see what you may have
" to turn on yourself, or just set them all to be sure.
filetype on
filetype plugin on
filetype indent on

set autoindent smartindent
set showmode

" Show line numbers.
set number

" Do not wrap lines.
set nowrap

" Show matching brackets.
set showmatch

" Always show status line.
set laststatus=2

" Mouse in all modes
set mouse=a

set history=1000
set matchtime=0
" The “Press ENTER or type command to continue” prompt is jarring and usually unnecessary. You can shorten command-line text and other info tokens with.
set shortmess=atI


" Now in the bottom right corner of the status line there will be something like: 529, 35 68%, representing line 529, column 35, about 68% of the way to the end.
set ruler
set showcmd

" A running gvim will always have a window title, but when vim is run within an xterm, by default it inherits the terminal’s current title.
set title


" Search options
" Highlight search terms
set hlsearch
set incsearch
set ignorecase
set smartcase


" Blink if there is an error
set visualbell
set noerrorbells
set printoptions=paper:letter

" Make backspace delete lots of things
set backspace=indent,eol,start

set backupdir=/tmp//,.
set directory=/tmp//,.
set undodir=/tmp//,.

set backspace=2   " Backspace deletes like most programs in insert mode

" Decrease maximum column length in which to search for syntax items
set synmaxcol=200

set nofoldenable

autocmd BufNewFile,BufRead *.ts setlocal filetype=typescript

" set filetypes as typescript.tsx
autocmd BufNewFile,BufRead *.tsx set filetype=typescript.tsx

set omnifunc=syntaxcomplete#Complete
set completeopt=noinsert,menuone,menu

" Allow us to use Ctrl-s and Ctrl-q as keybinds
"silent !stty -ixon

" Restore default behaviour when leaving Vim.
"autocmd VimLeave * silent !stty ixon

if has('macunix')
  set clipboard=unnamed
else
  set clipboard=unnamedplus
endif

autocmd BufRead,BufNewFile *.zpl set filetype=zimpl

" see https://unix.stackexchange.com/a/383044
" Triger `autoread` when files changes on disk
" https://unix.stackexchange.com/questions/149209/refresh-changed-content-of-file-opened-in-vim/383044#383044
" https://vi.stackexchange.com/questions/13692/prevent-focusgained-autocmd-running-in-command-line-editing-mode
set autoread
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * if mode() != 'c' | checktime | endif
" Notification after file change
" https://vi.stackexchange.com/questions/13091/autocmd-event-for-autoread
autocmd FileChangedShellPost *
  \ echohl WarningMsg | echo "File changed on disk. Buffer reloaded." | echohl None

source $HOME/.dotfiles/vim/mappings.basic.vim

colorscheme codedark

" Use nicer highlight colors
hi Search ctermfg=black ctermbg=228
set cursorline
hi CursorLine ctermbg=237
hi CursorLineNR ctermfg=39
hi CursorColumn ctermbg=238

augroup BgHighlight
    autocmd!
    autocmd WinEnter * set cursorline
    autocmd WinLeave * set nocursorline
augroup END
" Optimize performance, use when necessary
"https://vi.stackexchange.com/questions/10495/most-annoying-slow-down-of-a-plain-text-editor

hi diffAdded ctermfg=41
hi diffRemoved ctermfg=Red

hi diffFile cterm=NONE ctermfg=39
hi gitcommitDiff cterm=NONE ctermfg=39
hi diffIndexLine cterm=NONE ctermfg=39
hi diffLine cterm=NONE ctermfg=39

" Move focus to newly created splits
set splitbelow
set splitright

" Transparent background (so use terminal background)
hi Normal ctermbg=NONE
hi EndOfBuffer ctermbg=NONE
hi LineNr ctermbg=NONE
hi SignColumn ctermbg=NONE
